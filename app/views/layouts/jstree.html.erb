<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>GexIP :: <%= controller_name.humanize  %></title>
    <meta name="description" content="">
    <meta name="author" content="">
    <%= stylesheet_link_tag    "application", :media => "all" %>
    <%= stylesheet_link_tag    "procedimientos_jstree", :media => "all" %>
    <%#= javascript_include_tag "application" %>
    <%= javascript_include_tag "tree" %>

    <%= csrf_meta_tags %>

    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
  </head>

	<body>

    
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid">
          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="i-bar"></span>
            <span class="i-bar"></span>
            <span class="i-bar"></span>
          </a>
<%#= link_to 'GexIP', root_path, :class => 'brand' %>          
          <%= link_to image_tag('logo.png'), root_path, :class => 'brand', :style => 'padding-bottom:0;padding-top: 4px;' %>          
          <div class="nav-collapse">
            <% if usuario_signed_in? %>            
              <ul class="nav">
                <li class="dropdown">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                    Administraci&oacute;n
                    <b class="caret"></b>
                  </a>
                  <ul class="dropdown-menu">
                    <li><%= link_to 'Usuarios',usuarios_path %></li>
                    <li><%= link_to 'Roles',roles_path %></li>
                    <li><%= link_to 'Cargos',cargos_path %></li>
                    <!--<li><%= link_to 'Entes', entes_path %></li>-->
                    <li><%= link_to 'Paises', paises_path %></li>
                    <li><%= link_to 'Ciudades', ciudades_path %></li>
                    <li><%= link_to 'Unidades de Tiempo', unidades_tiempos_path %></li>
                  </ul>
                </li>
               
              </ul>
            <ul class="nav pull-right">
               <li class="dropdown">
               <%= link_to 'Contectado como ' + current_usuario.login, '#', :class => 'dropdown-toggle', 'data-toggle' => 'dropdown' %>
                <ul class="dropdown-menu">
                  <li><%= link_to icon_tag(' Ver Perfil', :class => 'icon-user'),  usuario_path(current_usuario.id) %></li>
                  <li><%= link_to icon_tag(' Cambiar Clave', :class => 'icon-edit'),  cambiar_clave_path %></li>
                  <li><%= link_to icon_tag(' Salir', :class => 'icon-share'), logout_path %></li>
                </ul>
                </li>
            </ul>

            <% end %>
          </div><!--/.nav-collapse -->
        </div>
      </div>
    </div>

		<div class="container-fluid">
      <div class="rows">        
			 <%= yield %>
      </div>
		</div>

    <div class="modal hide fade" id="modal-wrapper">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Cargando...</h3>
      </div>
      <div class="modal-body">
        <p>Cargando, espere por favorâ€¦</p>
      </div>
      <div class="modal-footer">
        <button class="btn btn-success" id="submit_form">Guardar</button>
        <button class="btn" data-dismiss="modal">Cancelar</button>  
      </div>
    </div>

		<%= javascript_include_tag 'jquery.jstree' %>
    <script type="text/javascript">
      $(function(){
        $('#submit_form').live('click', function(){ $('.form_remote').submit(); });

        $("#search").click(function () {
          $("#main").jstree("search", $('#text').val());
        });

        $("#clear_search").click(function () {
          $("#main").jstree("clear_search");
          $('#text').val('');
        });

        $("#main").jstree({ 
          // List of active plugins
          "plugins" : [ 
            "themes","json_data","ui","crrm","cookies","dnd","search","types","hotkeys","contextmenu" 
          ],

          // I usually configure the plugin that handles the data first
          // This example uses JSON as it is most common
          "json_data" : { 
            // This tree is ajax enabled - as this is most common, and maybe a bit more complex
            // All the options are almost the same as jQuery's AJAX (read the docs)
            "ajax" : {
              // the URL to fetch the data
              "url" : "<%= procedimientos_jstree_path %>",
              // the `data` function is executed in the instance's scope
              // the parameter is the node being loaded 
              // (may be -1, 0, or undefined when loading the root nodes)
              "data" : function (n) {                         
                // the result is fed to the AJAX request `data` option
                return { 
                  "operation" : "get_children", 
                  "id" : n.attr ? n.attr("id").replace("node_","") : 0,
                  'type': n.attr ? n.attr("type") : 'macroproceso'
                }; 
              }
            }
          },
          // Configuring the search plugin
          "search" : {
            // As this has been a common question - async search
            // Same as above - the `ajax` config option is actually jQuery's AJAX object
            "ajax" : {
              "url" : "<%= procedimientos_jstree_path %>",
              // You get the search string as a parameter
              "data" : function (str) {
                return { 
                  "operation" : "search", 
                  "search_str" : str 
                }; 
              }
            }
          },
          // Using types - most of the time this is an overkill
          // read the docs carefully to decide whether you need types
          "types" : {
            // I set both options to -2, as I do not need depth and children count checking
            // Those two checks may slow jstree a lot, so use only when needed
            "max_depth" : -2,
            "max_children" : -2,
            // I want only `macroproceso` nodes to be root nodes 
            // This will prevent moving or creating any other type as a root node
            "valid_children" : [ "macroproceso" ],
            "types" : {
              // The default type
              "default" : {                
                // I want this type to have no children (so only leaf nodes)
                // In my case - those are files
                "valid_children" : "none",
                // If we specify an icon for the default type it WILL OVERRIDE the theme icons
                "icon" : {
                  "image" : "/assets/icons/file.png"
                }
              },
              // The `proceso` type
              "proceso" : {
                // can have files and other procesos inside of it, but NOT `drive` nodes
                "valid_children" : [ "default", "subproceso", "procedimiento" ],
                "icon" : {
                  "image" : "/assets/icons/proceso.png"
                }
              },
              // The `subproceso` type
              "subproceso" : {
                // can have files and other procesos inside of it, but NOT `drive` nodes
                "valid_children" : [ "default", "procedimiento" ],
                "icon" : {
                  "image" : "/assets/icons/subproceso.png"
                }
              },
              // The `procedimiento` type
              "procedimiento" : {
                // can have files and other procesos inside of it, but NOT `drive` nodes
                "valid_children" : [ "default", "actividad" ],
                "icon" : {
                  "image" : "/assets/icons/procedimiento.png"
                }
              },
              // The `actividad` type
              "actividad" : {
                // can have files and other procesos inside of it, but NOT `drive` nodes
                "valid_children" : [ "default", "tarea" ],
                "icon" : {
                  "image" : "/assets/icons/actividad.png"
                }
              },
              // The `tarea` type
              "tarea" : {
                // can have files and other procesos inside of it, but NOT `drive` nodes
                "valid_children" : [ "default" ],
                "icon" : {
                  "image" : "/assets/icons/tarea.png"
                }
              },
              // The `drive` nodes 
              "macroproceso" : {
                // can have files and folders inside, but NOT other `drive` nodes
                "valid_children" : [ "default", "proceso" ],
                "icon" : {
                  "image" : "/assets/icons/macroproceso.png"
                },
                // those prevent the functions with the same name to be used on `drive` nodes
                // internally the `before` event is used
                "start_drag" : false,
                "move_node" : false,
                "delete_node" : false,
                "remove" : false
              }
            }
          }//,
          // UI & core - the nodes to initially select and open will be overwritten by the cookie plugin

          // the UI plugin - it handles selecting/deselecting/hovering nodes
         // "ui" : {
            // this makes the node with ID node_4 selected onload
         //   "initially_select" : [ "node_4" ]
         // },
          // the core plugin - not many options here
          //"core" : { 
            // just open those two nodes up
            // as this is an AJAX enabled tree, both will be downloaded from the server
           // "initially_open" : [ "node_2" , "node_3" ] 
         // }
        })
        .bind("create.jstree", function (e, data) {
          $.post(
            "/static/v.1.0pre/_demo/server.php", 
            { 
              "operation" : "create_node", 
              "id" : data.rslt.parent.attr("id").replace("node_",""), 
              "position" : data.rslt.position,
              "title" : data.rslt.name,
              "type" : data.rslt.obj.attr("rel")
            }, 
            function (r) {
              if(r.status) {
                $(data.rslt.obj).attr("id", "node_" + r.id);
              }
              else {
                $.jstree.rollback(data.rlbk);
              }
            }
          );
        })
        .bind("remove.jstree", function (e, data) {
          data.rslt.obj.each(function () {
            $.ajax({
              async : false,
              type: 'POST',
              url: "/static/v.1.0pre/_demo/server.php",
              data : { 
                "operation" : "remove_node", 
                "id" : this.id.replace("node_","")
              }, 
              success : function (r) {
                if(!r.status) {
                  data.inst.refresh();
                }
              }
            });
          });
        })
        .bind("rename.jstree", function (e, data) {
          $.post(
            "/static/v.1.0pre/_demo/server.php", 
            { 
              "operation" : "rename_node", 
              "id" : data.rslt.obj.attr("id").replace("node_",""),
              "title" : data.rslt.new_name
            }, 
            function (r) {
              if(!r.status) {
                $.jstree.rollback(data.rlbk);
              }
            }
          );
        })
        .bind("move_node.jstree", function (e, data) {
          data.rslt.o.each(function (i) {
            $.ajax({
              async : false,
              type: 'POST',
              url: "/static/v.1.0pre/_demo/server.php",
              data : { 
                "operation" : "move_node", 
                "id" : $(this).attr("id").replace("node_",""), 
                "ref" : data.rslt.cr === -1 ? 1 : data.rslt.np.attr("id").replace("node_",""), 
                "position" : data.rslt.cp + i,
                "title" : data.rslt.name,
                "copy" : data.rslt.cy ? 1 : 0
              },
              success : function (r) {
                if(!r.status) {
                  $.jstree.rollback(data.rlbk);
                }
                else {
                  $(data.rslt.oc).attr("id", "node_" + r.id);
                  if(data.rslt.cy && $(data.rslt.oc).children("UL").length) {
                    data.inst.refresh(data.inst._get_parent(data.rslt.oc));
                  }
                }
                $("#analyze").click();
              }
            });
          });
          
        }).bind("select_node.jstree", function (event, data) {
          var id = data.rslt.obj.attr('id').replace('node_', '');
          var rel = data.rslt.obj.attr('type');

          if (rel == 'macroproceso') {
            $.get('<%= macroprocesos_path   %>/' + id + '.js', {}, function(data){
              //setData(data);                            
            }, 'script');
          } else if (rel == 'proceso') {
            $.get('<%= procesos_path %>/' + id + '.js', {}, function(data){
              //setData(data);
            }, 'script');
          } else if (rel == 'subproceso') {
            $.get('<%= subprocesos_path %>/' + id + '.js', {}, function(data){
              //setData(data);
            }, 'script');
          } else if (rel == 'procedimiento') {
            $.get('<%= procedimientos_path %>/' + id + '.js', {}, function(data){
              //setData(data);
            }, 'script');
          }          
                    
          $('.descipt').html(humanize(rel));
        });


        // $('#main').jstree({
        //   'themes': {
        //     'theme': 'default',
        //     'url': '/assets/themes/default/style.css'
        //   },          
        //   'types': {
        //     'valid_children': ['macroproceso'],
        //     'types': {
        //       'macroproceso': {
        //         'icon': {                  
        //             'image': '/assets/icons/macroproceso.png'                  
        //         },
        //         'max_children': -1,
        //         'max_depth': -1,
        //         'valid_children': 'all'
        //       }
        //     }
        //   }
        // })
        // .bind("select_node.jstree", function (event, data) {
        //   var id = data.rslt.obj.attr('data-id');
        //   var rel = data.rslt.obj.attr('rel');

        //   if (rel == 'macroproceso') {
        //     $.get('<%= macroprocesos_path %>/' + id + '.js', {}, function(data){
        //       //setData(data);                            
        //     }, 'script');
        //   } else if (rel == 'proceso') {
        //     $.get('<%= procesos_path %>/' + id + '.js', {}, function(data){
        //       //setData(data);
        //     }, 'script');
        //   } else if (rel == 'subproceso') {
        //     $.get('<%= subprocesos_path %>/' + id + '.js', {}, function(data){
        //       //setData(data);
        //     }, 'script');
        //   } else if (rel == 'procedimiento') {
        //     $.get('<%= procedimientos_path %>/' + id + '.js', {}, function(data){
        //       //setData(data);
        //     }, 'script');
        //   }          
                    
        //   $('.descipt').html(humanize(rel));
        // });
      });

      function humanize(string)
      {
          return string.charAt(0).toUpperCase() + string.slice(1);
      }

      function setData(data) {
        obj = data[0]
        children = data[1]
        $('#id').html(obj.id);
        $('#nombre').html(obj.nombre);
        $('#objetivo').html(obj.objetivo);
        $('#definiciones').html(obj.definiciones);
        $('#codigo').html(obj.codigo);
        $('#clasificacion').html(obj.clasificacion);

        $("#children_body").html("");

        if (obj.cargo_id) {
          $.get('<%= cargos_path %>/' + obj.cargo_id + '.json', {}, function(cargo_data){
            $('#cargo').html(cargo_data.nombre);
          }, 'json');
        }

        if (children) {
          $.each(children, function(i, val) {
            var cont = "<tr><td>" + val.id + "</td>";
            codigo = ""
            if (val.codigo)
              codigo = val.codigo;

            nombre = ""
            if (val.nombre)
              nombre = val.nombre;

            if (val.descripcion)
              nombre = val.descripcion;

            cont = cont + "<td>" + codigo + "</td>";
            cont = cont + "<td>" + nombre + "</td>";
            $("#children_body").append(cont);
          })        
        }
      }
    </script>
	</body>
</html>